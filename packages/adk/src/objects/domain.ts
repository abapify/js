import type { AdkObjectConstructor } from '../base/adk-object';
import { createAdkObjectClassWithFactory } from '../base/adk-object-factory';
import { DomainSpec } from '../namespaces/ddic';
import type { DdicDomainData } from '../namespaces/ddic';
import { Kind } from '../kind';

/**
 * ABAP Domain object - Generated by ADK factory
 *
 * Use domain.spec to access all domain-specific properties directly.
 */
const DomainBase = createAdkObjectClassWithFactory(Kind.Domain, DomainSpec);

export class Domain extends DomainBase {
  /**
   * Get domain data as a structured object
   */
  getDomainData(): DdicDomainData {
    return this.spec.getDomainData();
  }
}

// Export constructor type for registry
export const DomainConstructor: AdkObjectConstructor<Domain> = Domain;
